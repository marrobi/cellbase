{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": ""
            }
        },
        "_artifactsLocationSasToken": {
            "type": "string",
            "metadata": {
                "description": ""
            }
        },
        "rgPrefix": {
            "type": "string",
            "metadata": {
                "description": "The resource group prefix"
            }
        },
        "rgLocation": {
            "type": "string",
            "defaultValue": "uksouth",
            "metadata": {
                "description": "Location for deployment"
            }
        },
        "sslCertificateEmail": {
            "type": "string",
            "metadata": {
                "description": "Email address used for mongoDB letsencrypt certificates"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "opencgaadmin",
            "metadata": {
                "description": "Admin username used by various services"
            }
        },
        "sshAdminKeyData": {
            "type": "securestring",
            "metadata": {
                "description": "The RSA data for the SSH Public Key used to authenticate the following machines: WebServers, Avere, DaemonVM, Mongo, Solr and Zookeeper."
            }
        },
        "mongoDBPassword": {
            "type": "securestring",
            "metadata": {
                "description": "This Data is used to derive unique passwords for several different services. Select a unique and random combination of data, the longer the better, and do not disclose it."
            }
        },
        "mongoDbDumpUrl": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The URL pointing to a tar.gz zip of the a mongo dump"
            }
        },
        "mongNodeCount": {
            "type": "int",
            "defaultValue": 3,
            "allowedValues": [
                1,
                3,
                5,
                7,
                9,
                11
            ],
            "metadata": {
                "description": "Amount of VMs to deploy for the mongodb replica set"
            }
        },
        "mongoNodeSize": {
            "type": "string",
            "defaultValue": "Standard_D4s_v3",
            "metadata": {
                "description": "The VM size for the mongo nodes"
            }
        },
        "cellbaseContainerImage":{
            "type": "string",
            "defaultValue":  "opencb/cellbase-app:a155404640ffaa08223a22afda3f6450592b40dd"
        },
        "customDeploymentSize": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Define an object for a custom tshirt size of the deployment. WARNING: Intended for experimenting or debugging use with care."
            }
        },
        "deploymentSize": {
            "type": "int",
            "allowedValues": [
                0,
                1,
                2
            ],
            "defaultValue": 1,
            "metadata": {
                "description": "What size of deployment do you want? 0 = For custom deployment. 1 = single mongo node. 2 = mongo replicaset"
            }
        },
        "LogAnalyticsWorkspaceID": {
            "type": "string",
            "metadata": {
                "description": "Log Analytics Workspace ID"
            }
        },
        "logAnalyticsWorkSpaceKey": {
            "type": "string",
            "metadata": {
                "description": "Log Analytics Workspace Key"
            }
        },
        "LogAnalyticsWorkspaceResourceID": {
            "type": "string",
            "metadata": {
                "description": "Log Analytics Workspace Resource ID"
            }
        }
                
    },
    "variables": {
        "_comment": "The below URL specifies the Mongo DB deployment templates to use in the opencb/opencga repository.",
        "mongoTemplateURI":"https://raw.githubusercontent.com/opencb/opencga/052ea4e1be6d708f9dde14ee42ad85914382f8e6/opencga-app/app/scripts/azure/arm/mongodb/azuredeploy.json",
        "dnsNamePrefix": "[toLower(substring(concat('opencga', uniqueString(subscription().subscriptionId,parameters('rgPrefix'))), 0, 16))]",
        "sizingOptions": [
            "[parameters('customDeploymentSize')]",
            {
                "type": "1 = Small",
                "mongo": {
                    "nodeCount": 1,
                    "nodeSize": "Standard_D4s_v3",
                    "diskType": "E10"
                },
                "webServers": {
                    "minNodeCount": 1,
                    "maxNodeCount": 2,
                    "nodeSize": "Standard_D2s_v3"
                }
            },
            {
                "type": "2 = Medium",
                "mongo": {
                    "nodeCount": 3,
                    "nodeSize": "Standard_E8s_v3",
                    "diskType": "P20"
                },
                "webServers": {
                    "minNodeCount": 2,
                    "maxNodeCount": 2,
                    "nodeSize": "Standard_D4s_v2"
                }
            }
        ],
        "selectedSize": "[variables('sizingOptions')[parameters('deploymentSize')]]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2018-05-01",
            "location": "[parameters('rgLocation')]",
            "name": "[concat(parameters('rgPrefix'),'-cellbase')]",
            "properties": {}
        },
        {
            "resourceGroup": "[concat(parameters('rgPrefix'),'-cellbase')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "name": "cellbase-vnet",
            "dependsOn": [
                "[concat(parameters('rgPrefix'),'-cellbase')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/vnet/azuredeploy.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2018-05-01",
            "location": "[parameters('rgLocation')]",
            "name": "[concat(parameters('rgPrefix'),'-cellbase-mongodb')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[concat(parameters('rgPrefix'),'-cellbase-mongodb')]",
            "apiVersion": "2018-05-01",
            "name": "cellbase-mongodb",
            "dependsOn": [
                "cellbase-vnet",
                "[concat(parameters('rgPrefix'),'-cellbase')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('mongoTemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "mongoDbDumpUrl": {
                        "value": "[parameters('mongoDbDumpUrl')]"
                    },
                    "subnetId": {
                        "value": "[reference('cellbase-vnet').outputs.defaultSubnetId.value]"
                    },
                    "location": {
                        "value": "[parameters('rgLocation')]"
                    },
                    "vmSize": {
                        "value": "[variables('selectedSize').mongo.nodeSize]"
                    },
                    "clusterSize": {
                        "value": "[variables('selectedSize').mongo.nodeCount]"
                    },
                    "certificateEmail": {
                        "value": "[parameters('sslCertificateEmail')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminSSHKeyData": {
                        "value": "[parameters('sshAdminKeyData')]"
                    },
                    "mongoDBUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "mongoDBPassword": {
                        "value": "[parameters('mongoDBPassword')]"
                    },
                    "LogAnalyticsWorkspaceResourceID": {
                        "value": "[parameters('LogAnalyticsWorkspaceResourceID')]"
                    },
                    "LogAnalyticsWorkspaceID": {
                        "value": "[parameters('LogAnalyticsWorkspaceID')]"
                    },
                    "LogAnalyticsWorkspaceKey": {
                        "value": "[parameters('LogAnalyticsWorkspaceKey')]"
                    }
                }
            }
        },
        {
            "resourceGroup": "[concat(parameters('rgPrefix'),'-cellbase')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "name": "appgw-ssl",
            "dependsOn": [
                "cellbase-vnet"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/appgw/azuredeploy.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters":{
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "applicationGatewaySubnetId": {
                        "value": "[reference('cellbase-vnet').outputs.appgwSubnetId.value]"
                    },
                    "dnsNamePrefix": {
                        "value": "[variables('dnsNamePrefix')]"
                    },
                    "appGwSslEmail": {
                        "value": "[parameters('sslCertificateEmail')]"
                    },
                    "LogAnalyticsWorkspaceResourceID": {
                        "value": "[parameters('LogAnalyticsWorkspaceResourceID')]"
                    }
                }
            }
        },
        {
            "comments": "This deploys a VMSS which hosts cellbase behind a LB with healthchecking, autoscaling and rolling update",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[concat(parameters('rgPrefix'),'-cellbase')]",
            "apiVersion": "2018-05-01",
            "name": "webservers",
            "dependsOn": [
                "cellbase-vnet",
                "[concat(parameters('rgPrefix'),'-cellbase')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/webservers/azuredeploy.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "virtualMachineSize": {
                        "value": "[variables('selectedSize').webServers.nodeSize]"
                    },
                    "minInstanceCount": {
                        "value": "[variables('selectedSize').webServers.minNodeCount]"
                    },
                    "initialInstanceCount": {
                        "value": "[variables('selectedSize').webServers.minNodeCount]"
                    },
                    "maxInstanceCount": {
                        "value": "[variables('selectedSize').webServers.maxNodeCount]"
                    },
                    "virtualNetworkSubnetId": {
                        "value": "[reference('cellbase-vnet').outputs.defaultSubnetId.value]"
                    },
                    "appgwBackendAddressPoolId": {
                        "value": "[reference('appgw-ssl').outputs.appgwBackendAddressPoolId.value]"
                    },
                    "SSHKeyData": {
                        "value": "[parameters('sshAdminKeyData')]"
                    },
                    "cellbaseContainerImage": {
                        "value": "[parameters('cellbaseContainerImage')]"
                    },
                    "mongoHosts": {
                        "value": "[replace(replace(replace(replace(string(reference('cellbase-mongodb').outputs.dnsNames.value),'[',''),'{\"fqdn\":\"',''),'\"}',''),']','')]"
                    },
                    "mongoUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "mongoPassword": {
                        "value": "[parameters('mongoDBPassword')]"
                    },
                    "LogAnalyticsWorkspaceResourceID": {
                        "value": "[parameters('LogAnalyticsWorkspaceResourceID')]"
                    },
                    "LogAnalyticsWorkspaceID": {
                        "value": "[parameters('LogAnalyticsWorkspaceID')]"
                    },
                    "LogAnalyticsWorkspaceKey": {
                        "value": "[parameters('LogAnalyticsWorkspaceKey')]"
                    }            
                }
            }
        }
        
    ],
    "outputs":    {
        "mongoDBUser": {
            "value": "[parameters('adminUsername')]",
            "type": "string"
        },
        "mongoDBPassword": {
            "value": "[parameters('mongoDBPassword')]",
            "type": "string"
        },
        "dnsNames": {
            "value": "[reference('cellbase-mongodb').outputs.dnsNames.value]",
            "type": "array"
        }
    }
}